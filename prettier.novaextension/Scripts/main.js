"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e={};class t extends Error{constructor(e,t){super(t),this.status=e}}function i(e){const t=nova.workspace.config.get(e),i=nova.config.get(e);return null===t?i:t}var r={showError:function(e,t,i){let r=new NotificationRequest(e);r.title=nova.localize(t),r.body=nova.localize(i),r.actions=[nova.localize("OK")],nova.notifications.add(r).catch((e=>console.error(e,e.stack)))},showActionableError:function(e,t,i,r,n){let o=new NotificationRequest(e);o.title=nova.localize(t),o.body=nova.localize(i),o.actions=r.map((e=>nova.localize(e))),nova.notifications.add(o).then((e=>n(e.actionIdx))).catch((e=>console.error(e,e.stack)))},log:Object.fromEntries(["log","info","warn"].map((e=>[e,(...t)=>{(nova.inDevMode()||i("prettier.debug.logging"))&&console[e](...t)}]))),getConfigWithWorkspaceOverride:i,observeConfigWithWorkspaceOverride:function(e,t){let i=!1;function r(...e){i?t.apply(this,e):i=!0}nova.workspace.config.observe(e,r),nova.config.observe(e,r)},ProcessError:t,handleProcessResult:function(e,i,r){const n=[];e.onStderr((e=>{n.push(e)})),e.onDidExit((e=>{0!==e?i(new t(e,n.join("\n"))):r&&r()}))},sanitizePrettierConfig:async function(){const e=nova.workspace.path+"/.nova/Configuration.json";console.info("Config Path:",e);let t="";try{let i=await nova.fs.open(e,"r");t=await i.read(),i.close(),console.info("Configuration file read successfully.")}catch(t){return void console.warn("Prettier configuration file not found or cannot be read:",e,t)}try{console.info("Raw configuration:",t);const i=JSON.parse(t);let r=!1;for(const e in i)if(e.startsWith("prettier.")){const t=i[e];console.info(`Processing key: ${e} with value: ${t}`),"Enable"===t||"Enabled"===t?(i[e]=!0,r=!0,console.info(`Key ${e} set to true`)):"Disable"===t||"Disabled"===t?(i[e]=!1,r=!0,console.info(`Key ${e} set to false`)):"Global Default"!==t&&"Globale Setting"!==t||(delete i[e],r=!0,console.info(`Key ${e} removed`))}if(r){const t=JSON.stringify(i,null,2);let r=await nova.fs.open(e,"w");await r.write(t),r.close(),console.info("Prettier configuration sanitized successfully.");let n=new NotificationRequest("prettier-config-updated");n.title="Project Configuration Updated",n.body="Your project's Prettier configuration has been updated to the new config format.",n.actions=["OK"],await nova.notifications.add(n),console.info("Notification sent.")}else console.info("Prettier configuration is already sanitized.")}catch(e){console.error("Error sanitizing Prettier configuration:",e)}}};const{handleProcessResult:n,log:o}=r;function s(e,t,i){for(;;){const r=nova.path.join(e,t),n=nova.fs.stat(r);if(n){if(i(r,n))return{directory:e,path:r}}if("/"===e)break;e=nova.path.dirname(e)}return null}async function a(e,t){let i,r;const s=new Promise(((e,t)=>{i=e,r=t})),a=new Process("/usr/bin/env",{args:["npm","ls",String(t),"--parseable","--long","--depth","0"],cwd:e});return a.onStdout((e=>{if(!e||!e.trim())return;const[r,n,s,a]=e.trim().split(":");return n&&n.startsWith(`${t}@`)?r===nova.workspace.path?(o.info(`You seem to be working on ${t}! The extension doesn't work without ${t} built, so using the built-in ${t} instead.`),i(null)):void i({path:r,correctVersion:"INVALID"!==s&&"MAXDEPTH"!==a}):i(null)})),n(a,r,i),a.start(),s}const{showError:p,showActionableError:c,log:l,getConfigWithWorkspaceOverride:d}=r,h=["arrowParens","bracketSameLine","bracketSpacing","embeddedLanguageFormatting","endOfLine","htmlWhitespaceSensitivity","insertPragma","jsxBracketSameLine","jsxSingleQuote","objectWrap","printWidth","proseWrap","quoteProps","requirePragma","semi","singleAttributePerLine","singleQuote","tabWidth","trailingComma","useTabs","vueIndentScriptAndStyle"],u=["phpVersion","trailingCommaPHP","braceStyle"],g=["xmlQuoteAttributes","xmlSelfClosingSpace","xmlSortAttributesByKey","xmlWhitespaceSensitivity"],f=["language","keywordCase","dataTypeCase","functionCase","identifierCase","logicalOperatorNewline","expressionWidth","linesBetweenQueries","denseOperators","newlineBeforeSemicolon","params","paramTypes"],m=["database","type"],v=["escapeNonLatin1","keySeparator"],y=["alignDirectives","alignUniversally","wrapParameters","continuationIndent"];var w={Formatter:class{constructor(){this.prettierServiceDidExit=this.prettierServiceDidExit.bind(this),this.prettierServiceStartDidFail=this.prettierServiceStartDidFail.bind(this),this.emitter=new Emitter,this.setupIsReadyPromise()}get defaultConfig(){return Object.fromEntries(h.map((e=>[e,d(`prettier.default-config.${e}`)])))}get phpConfig(){return Object.fromEntries(u.map((e=>[e,d(`prettier.plugins.prettier-plugin-php.${e}`)])))}get xmlConfig(){return Object.fromEntries(g.map((e=>[e,d(`prettier.plugins.prettier-plugin-xml.${e}`)])))}get sqlFormatterConfig(){return Object.fromEntries(f.map((e=>[e,d(`prettier.plugins.prettier-plugin-sql.sql-formatter.${e}`)])))}get propertiesConfig(){return Object.fromEntries(v.map((e=>[e,d(`prettier.plugins.prettier-plugin-properties.${e}`)])))}get nginxConfig(){return Object.fromEntries(y.map((e=>[e,d(`prettier.plugins.prettier-plugin-nginx.${e}`)])))}get nodeSqlParserConfig(){return Object.fromEntries(m.map((e=>[e,d(`prettier.plugins.prettier-plugin-sql.node-sql-parser.${e}`)])))}get isReady(){return this._isReadyPromise?this._isReadyPromise:(this.showServiceNotRunningError(),!1)}async start(e){e&&(this.modulePath=e),this._isReadyPromise||this.setupIsReadyPromise(),this._isStoppedPromise&&await _isStoppedPromise,this.prettierService||(l.info("Starting Prettier service"),this.prettierService=new Process("/usr/bin/env",{args:["node",nova.path.join(nova.extension.path,"Scripts","prettier-service","prettier-service.js"),this.modulePath],stdio:"jsonrpc",cwd:nova.workspace.path}),this.prettierService.onDidExit(this.prettierServiceDidExit),this.prettierService.onNotify("didStart",(()=>{this._resolveIsReadyPromise(!0)})),this.prettierService.onNotify("startDidFail",this.prettierServiceStartDidFail),this.prettierService.start())}stop(){if(nova.notifications.cancel("prettier-not-running"),this._isReadyPromise&&this.prettierService&&!this._isStoppedPromise)return l.info("Stopping Prettier service"),this._isStoppedPromise=new Promise((e=>{this._resolveIsStoppedPromise=e})),this._resolveIsReadyPromise&&this._resolveIsReadyPromise(!1),this._isReadyPromise=null,this.prettierService.terminate(),this.prettierService=null,this._isStoppedPromise}setupIsReadyPromise(){this._isReadyPromise=new Promise((e=>{this._resolveIsReadyPromise=e}))}prettierServiceDidExit(e){if(this._resolveIsStoppedPromise&&(this._resolveIsStoppedPromise(),this._isStoppedPromise=null),this.prettierService){if(console.error(`Prettier service exited with code ${e}`),this._resolveIsReadyPromise&&this._resolveIsReadyPromise(!1),this._isReadyPromise=null,this.prettierService=null,this.prettierServiceCrashedRecently)return this.showServiceNotRunningError();this.prettierServiceCrashedRecently=!0,setTimeout((()=>this.prettierServiceCrashedRecently=!1),5e3),this.start()}}prettierServiceStartDidFail({parameters:e}){this._resolveIsReadyPromise(!1),c("prettier-not-running","Couldn't Load Prettier","Please ensure your Node.js installation is up to date. Additionally, check if the 'Prettier module' path is correctly set in your extension or project settings. For more details, refer to the error log in the Extension Console",["Project settings","Extension settings"],(e=>{switch(e){case 0:nova.workspace.openConfig();break;case 1:nova.openConfig()}})),console.error(`${e.name}: ${e.message}\n${e.stack}`)}showServiceNotRunningError(){c("prettier-not-running","Prettier Stopped Running","If this problem persists, please report the issue through the Extension Library.",["Restart Prettier"],(e=>{if(0===e)this.start()}))}async formatEditor(e,t,i){const{document:r}=e;nova.notifications.cancel("prettier-unsupported-syntax");const n=r.path||nova.workspace.path,o=await this.shouldApplyDefaultConfig(r,t,n);if(null===o)return[];l.info(`Formatting ${r.path}`);const s=new Range(0,r.length),a=e.getTextInRange(s),c=d("prettier.plugins.prettier-plugin-php.enabled"),h=d("prettier.plugins.prettier-plugin-sql.enabled"),u=d("prettier.plugins.prettier-plugin-xml.enabled"),g=d("prettier.plugins.prettier-plugin-nginx.enabled"),f=d("prettier.plugins.prettier-plugin-java.enabled"),m=d("prettier.plugins.prettier-plugin-properties.enabled"),v=d("prettier.plugins.prettier-plugin-sql.formatter");let y=[];this.modulePath.includes(nova.extension.path)&&("php"===r.syntax&&c&&y.push(nova.path.join(nova.extension.path,"node_modules","@prettier","plugin-php","src","index.mjs")),"sql"===r.syntax&&h&&y.push(nova.path.join(nova.extension.path,"node_modules","prettier-plugin-sql","lib","index.cjs")),"xml"===r.syntax&&u&&y.push(nova.path.join(nova.extension.path,"node_modules","@prettier","plugin-xml","src","plugin.js")),"nginx"===r.syntax&&g&&y.push(nova.path.join(nova.extension.path,"node_modules","prettier-plugin-nginx","dist","index.js")),"java"===r.syntax&&f&&y.push(nova.path.join(nova.extension.path,"node_modules","prettier-plugin-java","dist","index.js")),"java-properties"===r.syntax&&m&&y.push(nova.path.join(nova.extension.path,"node_modules","prettier-plugin-properties","index.js")));const w={parser:this.getParserForSyntax(r.syntax),...y.length>0?{plugins:y}:{},...r.path?{filepath:r.path}:{},...o?this.defaultConfig:{},...i?{rangeStart:e.selectedRange.start,rangeEnd:e.selectedRange.end}:{}};"php"===r.syntax&&Object.assign(w,this.phpConfig),"xml"===r.syntax&&Object.assign(w,this.xmlConfig),"sql"===r.syntax&&("sql-formatter"===v?Object.assign(w,this.sqlFormatterConfig):"node-sql-parser"===v&&Object.assign(w,this.nodeSqlParserConfig)),"java-properties"===r.syntax&&Object.assign(w,this.propertiesConfig),"nginx"===r.syntax&&Object.assign(w,this.nginxConfig),l.info("Prettier options:",JSON.stringify(w,null,2));const S=await this.prettierService.request("format",{original:a,pathForConfig:n,ignorePath:t&&this.getIgnorePath(n),options:{...w,cursorOffset:e.selectedRange.start},withCursor:!0}),{formatted:b,error:P,ignored:x,missingParser:C,cursorOffset:j}=S;return this._cursorOffset=j,P?this.issuesFromPrettierError(P):x?(l.info(`Prettier is configured to ignore ${r.path}`),[]):C?(t||p("prettier-unsupported-syntax","Syntax Not Supported","Prettier doesn't include a parser for this file, and no installed plugin provides one."),l.info(`No parser for ${r.path}`),[]):b===a?(l.info(`No changes for ${r.path}`),[]):void await this.applyResult(e,a,b)}async shouldApplyDefaultConfig(e,t,i){if(t&&!0===d(`prettier.format-on-save.ignored-syntaxes.${e.syntax}`))return l.info(`Not formatting (${e.syntax} syntax ignored) ${e.path}`),null;let r=!1;if(e.isRemote){if(t&&d("prettier.format-on-save.ignore-remote"))return null}else if(r=await this.prettierService.request("hasConfig",{pathForConfig:i}),!r&&t&&d("prettier.format-on-save.ignore-without-config"))return null;return!r}getIgnorePath(e){const t=nova.workspace.path||nova.path.dirname(e);return nova.path.join(t,".prettierignore")}getParserForSyntax(e){switch(e){case"javascript":case"jsx":return"babel";case"tsx":return"typescript";case"flow":return"babel-flow";case"html+erb":return"erb";case"java-properties":return"dot-properties";default:return e}}async applyResult(e,t,i){l.info(`Applying formatted changes to ${e.document.path}`);const r=new Range(0,e.document.length);await e.edit((e=>{e.replace(r,i)}));const n=null!=this._cursorOffset?this._cursorOffset:e.selectedRange.end;e.selectedRanges=[new Range(n,n)],e.scrollToPosition(n)}async replace(e,t){const{document:i}=e,r=e.selectedRange.end,n=new Range(0,i.length);await e.edit((e=>{e.replace(n,t)})),e.selectedRanges=[new Range(r,r)]}issuesFromPrettierError(e){if("string"!=typeof e.message)return[];if("UndefinedParserError"===e.name)throw e;let t=e.message.match(/\((\d+):(\d+)\)\n/m);if(!t&&(t=e.message.match(/^>\s*?(\d+)\s\|\s/m),t)){const i=e.message.match(/^\s+\|(\s+)\^+($|\n)/im);t[2]=i?i[1].length+1:0}if(!t)throw e;const i=new Issue;return i.message=e.stack?e.message:e.message.split(/\n\s*?at\s+/i)[0],i.severity=IssueSeverity.Error,i.line=t[1],i.column=t[2],[i]}}};const S=async function(){if(nova.workspace.path){try{const e=function(e,t){const i=s(e,"package.json",((e,i)=>{if(!i.isFile())return!1;const r=nova.fs.open(e,"r");try{const e=JSON.parse(r.read());if(e.dependencies&&e.dependencies[t]||e.devDependencies&&e.devDependencies[t])return!0}catch{}}));if(!i)return null;const r=s(i.directory,nova.path.join("node_modules",t),((e,t)=>t.isDirectory()||t.isSymbolicLink()));return r?r.path:null}(nova.workspace.path,"prettier");if(e)return o.info(`Loading project prettier (fs) at ${e}`),e}catch(e){o.warn("Error trying to find workspace Prettier using file system",e,e.stack)}try{const e=await a(nova.workspace.path,"prettier");if(e)return o.info(`Loading project prettier (npm) at ${e.path}`),e.path}catch(e){if(127===e.status)throw e;o.warn("Error trying to find workspace Prettier using npm",e,e.stack)}}try{const e=nova.path.join(nova.extension.path,"node_modules","prettier"),t=!!nova.fs.stat(nova.path.join(nova.extension.path,"node_modules")),i=!!nova.fs.stat(nova.path.join(nova.extension.path,"package-lock.json"));let r=null;t&&i||(r="missing dependencies");let s={};try{const e=nova.path.join(nova.extension.path,"package.json");try{const t=nova.fs.open(e,"r").read(),i=JSON.parse(t);s={...i.dependencies||{},...i.optionalDependencies||{}}}catch(e){o.warn("Could not read or parse package.json",e)}}catch(e){o.warn("Could not read or parse package.json",e)}const p=[];for(const e of Object.keys(s))try{const t=await a(nova.extension.path,e);t&&t.correctVersion||p.push(e)}catch(t){o.warn(`Failed to verify package "${e}":`,t),p.push(e)}return p.length>0&&(r=`invalid or outdated packages: ${p.join(", ")}`),r&&(o.info(`Running npm install due to: ${r}`),await async function(e){let t,i;const r=new Promise(((e,r)=>{t=e,i=r})),o=new Process("/usr/bin/env",{args:["npm","install","--only-prod"],cwd:e});return n(o,i,t),o.start(),r}(nova.extension.path)),o.info(`Loading bundled prettier from ${e}`),e}catch(e){if(127===e.status)throw e;o.warn("Error trying to find or install bundled Prettier",e)}},{showError:b,getConfigWithWorkspaceOverride:P,observeConfigWithWorkspaceOverride:x,log:C,sanitizePrettierConfig:j}=r,{Formatter:k}=w;class E{constructor(){this.didAddTextEditor=this.didAddTextEditor.bind(this),this.toggleFormatOnSave=this.toggleFormatOnSave.bind(this),this.modulePathDidChange=this.modulePathDidChange.bind(this),this.prettierConfigFileDidChange=this.prettierConfigFileDidChange.bind(this),this.editorWillSave=this.editorWillSave.bind(this),this.didInvokeFormatCommand=this.didInvokeFormatCommand.bind(this),this.didInvokeFormatSelectionCommand=this.didInvokeFormatSelectionCommand.bind(this),this.didInvokeSaveWithoutFormattingCommand=this.didInvokeSaveWithoutFormattingCommand.bind(this),this.saveListeners=new Map,this.ignoredEditors=new Set,this.issueCollection=new IssueCollection,this.formatter=new k}setupConfiguration(){nova.config.remove("prettier.use-compatibility-mode"),nova.config.remove("prettier.plugins.prettier-plugin-php.singleQuote"),j(),x("prettier.format-on-save",this.toggleFormatOnSave),x("prettier.module.path",this.modulePathDidChange)}start(){if(this.setupConfiguration(),nova.workspace.path){const e=["**/.prettierrc","**/.prettierrc.json","**/.prettierrc.json5","**/.prettierrc.yaml","**/.prettierrc.yml","**/.prettierrc.toml","**/.prettierrc.js","**/.prettierrc.cjs","**/.prettierrc.mjs","**/.prettierrc.ts","**/.prettierrc.cts","**/.prettierrc.mts","**/prettier.config.js","**/prettier.config.cjs","**/prettier.config.mjs","**/prettier.config.ts","**/prettier.config.cts","**/prettier.config.mts","**/package.json","**/package.yaml","**/.prettierignore"];for(const t of e)nova.fs.watch(t,this.prettierConfigFileDidChange)}nova.workspace.onDidAddTextEditor(this.didAddTextEditor),nova.commands.register("prettier.format",this.didInvokeFormatCommand),nova.commands.register("prettier.format-selection",this.didInvokeFormatSelectionCommand),nova.commands.register("prettier.save-without-formatting",this.didInvokeSaveWithoutFormattingCommand),nova.commands.register("prettier.reset-suppressed-message",(()=>{nova.config.remove("prettier.selection-unsupported.dismissed"),nova.workspace.showInformativeMessage(nova.localize("Prettier+ notification restored. Unsupported syntax warnings for ‘Format Selection’ will reappear."))}))}async startFormatter(){const e=P("prettier.module.path")||await S();C.info(`Loading prettier at ${e}`),await this.formatter.start(e).catch((()=>new Promise((e=>setTimeout(e,1e3))).then((()=>this.formatter.start(e)))))}toggleFormatOnSave(){this.enabled=P("prettier.format-on-save"),this.enabled?nova.workspace.textEditors.forEach(this.didAddTextEditor):(this.saveListeners.forEach((e=>e.dispose())),this.saveListeners.clear())}async prettierConfigFileDidChange(){await this.formatter.stop(),await this.formatter.start()}async modulePathDidChange(){try{await this.formatter.stop(),await this.startFormatter()}catch(e){return 127===e.status?b("prettier-resolution-error","Can't find npm and Prettier","Prettier couldn't be found because npm isn't available. Please make sure you have Node installed. If you've only installed Node through NVM, you'll need to change your shell configuration to work with Nova. See https://library.panic.com/nova/environment-variables/"):(console.error("Unable to start prettier service",e,e.stack),b("prettier-resolution-error","Unable to start Prettier","Please check the extension console for additional logs."))}}didAddTextEditor(e){this.enabled&&(this.saveListeners.has(e)||this.saveListeners.set(e,e.onWillSave(this.editorWillSave)))}async editorWillSave(e){await this.formatEditor(e,!0,!1)}async didInvokeFormatCommand(e){await this.formatEditor(e,!1,!1)}async didInvokeFormatSelectionCommand(e){const t=new Set(["javascript","javascriptreact","typescript","typescriptreact","graphql","handlebars"]),i=e.document.syntax;if(!t.has(i)){const e="prettier.selection-unsupported.dismissed";if(!0===nova.config.get(e))return;let t=new NotificationRequest("prettier-selection-unsupported");return t.title=nova.localize("Unsupported Syntax"),t.body=nova.localize("“Format Selection” isn’t available for this file type. Supported syntaxes: JavaScript, TypeScript, GraphQL, and Handlebars."),t.actions=[nova.localize("OK"),nova.localize("Don't Show Again")],void nova.notifications.add(t).then((t=>{1===t.actionIdx&&nova.config.set(e,!0)})).catch((e=>{C.error("Notification error:",e)}))}await this.formatEditor(e,!1,!0)}async didInvokeSaveWithoutFormattingCommand(e){this.ignoredEditors.add(e),e.save().finally((()=>this.ignoredEditors.delete(e)))}async formatEditor(e,t,i){if(!this.ignoredEditors.has(e))try{if(!await this.formatter.isReady)return;const r=await this.formatter.formatEditor(e,t,i);this.issueCollection.set(e.document.uri,r)}catch(t){console.error(t,t.stack),b("prettier-format-error","Error while formatting",`"${t.message}" occurred while formatting ${e.document.path}. See the extension console for more info.`)}}}var R=e.activate=async function(){try{(new E).start()}catch(e){return console.error("Unable to set up prettier service",e,e.stack),b("prettier-resolution-error","Unable to start Prettier","Please check the extension console for additional logs.")}},F=e.deactivate=function(){};exports.activate=R,exports.deactivate=F,exports.default=e;
